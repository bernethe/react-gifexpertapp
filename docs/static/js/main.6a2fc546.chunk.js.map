{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","_img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAmCeA,EAhCY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCShBG,EAlBK,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KC2BDO,EA7BQ,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGrB,CAACpB,IAEGqB,EDTgBK,CAAa1B,GAA7BO,EAJ4B,EAI5BA,KAAKa,EAJuB,EAIvBA,QASZ,OACI,oCACI,4BAAKpB,GACHoB,GAAW,0CACb,yBAAKJ,UAAU,aAEPT,EAAKE,KAAK,SAACkB,GAEP,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAKhB,IAAQgB,UEG/CE,EA1Ba,WAAO,IAAD,EAEG3C,mBAAS,CAAC,iBAFb,mBAE1B4C,EAF0B,KAEd7C,EAFc,KAUjC,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEE6C,EAAWrB,KAAK,SAAAT,GACf,OAAQ,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,UCjBhD+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6a2fc546.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        //console.log(e.target.value);\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length >2) {\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bH5g0FsM2WyHD0i29EwNWz5eIhBfvN4b`;\n\n    const resp = await fetch(url);\n\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    } );\n\n    return gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    //console.log(img);\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import React, {useState, useEffect} from 'react'\nimport { GifGridItem } from './GifGridItem';\n// import getGifs from '../helpers/getGifs';\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n\n    const {data,loading} = useFetchGifs(category);\n    // console.log(data,loading);\n\n    // useEffect( () => {\n    //     getGifs(category).then(imgs => setImages( imgs ))\n    // }, [category] );\n\n    \n\n    return (\n        <>\n            <h3>{category}</h3>\n            { loading && <p>Cargando...</p> }\n            <div className=\"card-grid\">\n                {\n                    data.map( (_img) => {\n                        // return <li key={img.id}>{img.title}</li>\n                        return <GifGridItem key={_img.id} {..._img} />\n                    } )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import {useState, useEffect} from 'react';\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading:false\n                });\n            })\n    }, [category] );\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n\tconst [categories, setCategories] = useState(['The Simpsons']);\n\n\t// const handleAdd = () => {\n\t// \t// setCategories( categories.push('HunterXHunter') );\n\t// \tsetCategories( [...categories ,'HunterXHunter'] );\n\t// \t// console.log(categories);\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\tcategories.map( category => {\n\t\t\t\t\t\treturn (<GifGrid key={category} category={category} />);\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t)\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}